#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_PTUD_QLTV_V2")]
	public partial class DB_PTUD_QLTV_V2DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBanIn(BanIn instance);
    partial void UpdateBanIn(BanIn instance);
    partial void DeleteBanIn(BanIn instance);
    partial void InsertTheLoai(TheLoai instance);
    partial void UpdateTheLoai(TheLoai instance);
    partial void DeleteTheLoai(TheLoai instance);
    partial void InsertChiTietPhieuMuon(ChiTietPhieuMuon instance);
    partial void UpdateChiTietPhieuMuon(ChiTietPhieuMuon instance);
    partial void DeleteChiTietPhieuMuon(ChiTietPhieuMuon instance);
    partial void InsertChiTietPhieuTra(ChiTietPhieuTra instance);
    partial void UpdateChiTietPhieuTra(ChiTietPhieuTra instance);
    partial void DeleteChiTietPhieuTra(ChiTietPhieuTra instance);
    partial void InsertDauSach(DauSach instance);
    partial void UpdateDauSach(DauSach instance);
    partial void DeleteDauSach(DauSach instance);
    partial void InsertDocGia(DocGia instance);
    partial void UpdateDocGia(DocGia instance);
    partial void DeleteDocGia(DocGia instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertNhaXuatBan(NhaXuatBan instance);
    partial void UpdateNhaXuatBan(NhaXuatBan instance);
    partial void DeleteNhaXuatBan(NhaXuatBan instance);
    partial void InsertPhieuMuon(PhieuMuon instance);
    partial void UpdatePhieuMuon(PhieuMuon instance);
    partial void DeletePhieuMuon(PhieuMuon instance);
    partial void InsertPhieuTra(PhieuTra instance);
    partial void UpdatePhieuTra(PhieuTra instance);
    partial void DeletePhieuTra(PhieuTra instance);
    partial void InsertTheThuVien(TheThuVien instance);
    partial void UpdateTheThuVien(TheThuVien instance);
    partial void DeleteTheThuVien(TheThuVien instance);
    #endregion
		
		public DB_PTUD_QLTV_V2DataContext() : 
				base(global::DTO.Properties.Settings.Default.DB_PTUD_QLTV_V2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DB_PTUD_QLTV_V2DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_PTUD_QLTV_V2DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_PTUD_QLTV_V2DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_PTUD_QLTV_V2DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BanIn> BanIns
		{
			get
			{
				return this.GetTable<BanIn>();
			}
		}
		
		public System.Data.Linq.Table<TheLoai> TheLoais
		{
			get
			{
				return this.GetTable<TheLoai>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietPhieuMuon> ChiTietPhieuMuons
		{
			get
			{
				return this.GetTable<ChiTietPhieuMuon>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietPhieuTra> ChiTietPhieuTras
		{
			get
			{
				return this.GetTable<ChiTietPhieuTra>();
			}
		}
		
		public System.Data.Linq.Table<DauSach> DauSaches
		{
			get
			{
				return this.GetTable<DauSach>();
			}
		}
		
		public System.Data.Linq.Table<DocGia> DocGias
		{
			get
			{
				return this.GetTable<DocGia>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<NhaXuatBan> NhaXuatBans
		{
			get
			{
				return this.GetTable<NhaXuatBan>();
			}
		}
		
		public System.Data.Linq.Table<PhieuMuon> PhieuMuons
		{
			get
			{
				return this.GetTable<PhieuMuon>();
			}
		}
		
		public System.Data.Linq.Table<PhieuTra> PhieuTras
		{
			get
			{
				return this.GetTable<PhieuTra>();
			}
		}
		
		public System.Data.Linq.Table<TheThuVien> TheThuViens
		{
			get
			{
				return this.GetTable<TheThuVien>();
			}
		}
		
		public System.Data.Linq.Table<view_DSDauSach> view_DSDauSaches
		{
			get
			{
				return this.GetTable<view_DSDauSach>();
			}
		}
		
		public System.Data.Linq.Table<view_DSPhieuMuon> view_DSPhieuMuons
		{
			get
			{
				return this.GetTable<view_DSPhieuMuon>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BanIn")]
	public partial class BanIn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBanIn;
		
		private System.Nullable<int> _MaSach;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntitySet<ChiTietPhieuMuon> _ChiTietPhieuMuons;
		
		private EntitySet<ChiTietPhieuTra> _ChiTietPhieuTras;
		
		private EntityRef<DauSach> _DauSach;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBanInChanging(int value);
    partial void OnMaBanInChanged();
    partial void OnMaSachChanging(System.Nullable<int> value);
    partial void OnMaSachChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public BanIn()
		{
			this._ChiTietPhieuMuons = new EntitySet<ChiTietPhieuMuon>(new Action<ChiTietPhieuMuon>(this.attach_ChiTietPhieuMuons), new Action<ChiTietPhieuMuon>(this.detach_ChiTietPhieuMuons));
			this._ChiTietPhieuTras = new EntitySet<ChiTietPhieuTra>(new Action<ChiTietPhieuTra>(this.attach_ChiTietPhieuTras), new Action<ChiTietPhieuTra>(this.detach_ChiTietPhieuTras));
			this._DauSach = default(EntityRef<DauSach>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBanIn", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaBanIn
		{
			get
			{
				return this._MaBanIn;
			}
			set
			{
				if ((this._MaBanIn != value))
				{
					this.OnMaBanInChanging(value);
					this.SendPropertyChanging();
					this._MaBanIn = value;
					this.SendPropertyChanged("MaBanIn");
					this.OnMaBanInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSach", DbType="Int")]
		public System.Nullable<int> MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					if (this._DauSach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSachChanging(value);
					this.SendPropertyChanging();
					this._MaSach = value;
					this.SendPropertyChanged("MaSach");
					this.OnMaSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BanIn_ChiTietPhieuMuon", Storage="_ChiTietPhieuMuons", ThisKey="MaBanIn", OtherKey="MaBanIn")]
		public EntitySet<ChiTietPhieuMuon> ChiTietPhieuMuons
		{
			get
			{
				return this._ChiTietPhieuMuons;
			}
			set
			{
				this._ChiTietPhieuMuons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BanIn_ChiTietPhieuTra", Storage="_ChiTietPhieuTras", ThisKey="MaBanIn", OtherKey="MaBanIn")]
		public EntitySet<ChiTietPhieuTra> ChiTietPhieuTras
		{
			get
			{
				return this._ChiTietPhieuTras;
			}
			set
			{
				this._ChiTietPhieuTras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DauSach_BanIn", Storage="_DauSach", ThisKey="MaSach", OtherKey="MaSach", IsForeignKey=true)]
		public DauSach DauSach
		{
			get
			{
				return this._DauSach.Entity;
			}
			set
			{
				DauSach previousValue = this._DauSach.Entity;
				if (((previousValue != value) 
							|| (this._DauSach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DauSach.Entity = null;
						previousValue.BanIns.Remove(this);
					}
					this._DauSach.Entity = value;
					if ((value != null))
					{
						value.BanIns.Add(this);
						this._MaSach = value.MaSach;
					}
					else
					{
						this._MaSach = default(Nullable<int>);
					}
					this.SendPropertyChanged("DauSach");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhieuMuons(ChiTietPhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.BanIn = this;
		}
		
		private void detach_ChiTietPhieuMuons(ChiTietPhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.BanIn = null;
		}
		
		private void attach_ChiTietPhieuTras(ChiTietPhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.BanIn = this;
		}
		
		private void detach_ChiTietPhieuTras(ChiTietPhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.BanIn = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheLoai")]
	public partial class TheLoai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTheLoai;
		
		private string _TenTheLoai;
		
		private EntitySet<DauSach> _DauSaches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTheLoaiChanging(int value);
    partial void OnMaTheLoaiChanged();
    partial void OnTenTheLoaiChanging(string value);
    partial void OnTenTheLoaiChanged();
    #endregion
		
		public TheLoai()
		{
			this._DauSaches = new EntitySet<DauSach>(new Action<DauSach>(this.attach_DauSaches), new Action<DauSach>(this.detach_DauSaches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTheLoai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTheLoai
		{
			get
			{
				return this._MaTheLoai;
			}
			set
			{
				if ((this._MaTheLoai != value))
				{
					this.OnMaTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaTheLoai = value;
					this.SendPropertyChanged("MaTheLoai");
					this.OnMaTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTheLoai", DbType="NVarChar(100)")]
		public string TenTheLoai
		{
			get
			{
				return this._TenTheLoai;
			}
			set
			{
				if ((this._TenTheLoai != value))
				{
					this.OnTenTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenTheLoai = value;
					this.SendPropertyChanged("TenTheLoai");
					this.OnTenTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_DauSach", Storage="_DauSaches", ThisKey="MaTheLoai", OtherKey="MaTheLoai")]
		public EntitySet<DauSach> DauSaches
		{
			get
			{
				return this._DauSaches;
			}
			set
			{
				this._DauSaches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DauSaches(DauSach entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = this;
		}
		
		private void detach_DauSaches(DauSach entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietPhieuMuon")]
	public partial class ChiTietPhieuMuon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhieuMuon;
		
		private int _MaBanIn;
		
		private System.Nullable<System.DateTime> _NgayHenTra;
		
		private System.Nullable<System.DateTime> _NgayTra;
		
		private string _GhiChu;
		
		private EntityRef<BanIn> _BanIn;
		
		private EntityRef<PhieuMuon> _PhieuMuon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuMuonChanging(int value);
    partial void OnMaPhieuMuonChanged();
    partial void OnMaBanInChanging(int value);
    partial void OnMaBanInChanged();
    partial void OnNgayHenTraChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHenTraChanged();
    partial void OnNgayTraChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTraChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public ChiTietPhieuMuon()
		{
			this._BanIn = default(EntityRef<BanIn>);
			this._PhieuMuon = default(EntityRef<PhieuMuon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuMuon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhieuMuon
		{
			get
			{
				return this._MaPhieuMuon;
			}
			set
			{
				if ((this._MaPhieuMuon != value))
				{
					if (this._PhieuMuon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhieuMuonChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuMuon = value;
					this.SendPropertyChanged("MaPhieuMuon");
					this.OnMaPhieuMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBanIn", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaBanIn
		{
			get
			{
				return this._MaBanIn;
			}
			set
			{
				if ((this._MaBanIn != value))
				{
					if (this._BanIn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBanInChanging(value);
					this.SendPropertyChanging();
					this._MaBanIn = value;
					this.SendPropertyChanged("MaBanIn");
					this.OnMaBanInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHenTra", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayHenTra
		{
			get
			{
				return this._NgayHenTra;
			}
			set
			{
				if ((this._NgayHenTra != value))
				{
					this.OnNgayHenTraChanging(value);
					this.SendPropertyChanging();
					this._NgayHenTra = value;
					this.SendPropertyChanged("NgayHenTra");
					this.OnNgayHenTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTra", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTra
		{
			get
			{
				return this._NgayTra;
			}
			set
			{
				if ((this._NgayTra != value))
				{
					this.OnNgayTraChanging(value);
					this.SendPropertyChanging();
					this._NgayTra = value;
					this.SendPropertyChanged("NgayTra");
					this.OnNgayTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(100)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BanIn_ChiTietPhieuMuon", Storage="_BanIn", ThisKey="MaBanIn", OtherKey="MaBanIn", IsForeignKey=true)]
		public BanIn BanIn
		{
			get
			{
				return this._BanIn.Entity;
			}
			set
			{
				BanIn previousValue = this._BanIn.Entity;
				if (((previousValue != value) 
							|| (this._BanIn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BanIn.Entity = null;
						previousValue.ChiTietPhieuMuons.Remove(this);
					}
					this._BanIn.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuMuons.Add(this);
						this._MaBanIn = value.MaBanIn;
					}
					else
					{
						this._MaBanIn = default(int);
					}
					this.SendPropertyChanged("BanIn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuMuon_ChiTietPhieuMuon", Storage="_PhieuMuon", ThisKey="MaPhieuMuon", OtherKey="MaPhieuMuon", IsForeignKey=true)]
		public PhieuMuon PhieuMuon
		{
			get
			{
				return this._PhieuMuon.Entity;
			}
			set
			{
				PhieuMuon previousValue = this._PhieuMuon.Entity;
				if (((previousValue != value) 
							|| (this._PhieuMuon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuMuon.Entity = null;
						previousValue.ChiTietPhieuMuons.Remove(this);
					}
					this._PhieuMuon.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuMuons.Add(this);
						this._MaPhieuMuon = value.MaPhieuMuon;
					}
					else
					{
						this._MaPhieuMuon = default(int);
					}
					this.SendPropertyChanged("PhieuMuon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietPhieuTra")]
	public partial class ChiTietPhieuTra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhieuTra;
		
		private int _MaBanIn;
		
		private System.Nullable<bool> _DaTra;
		
		private EntityRef<BanIn> _BanIn;
		
		private EntityRef<PhieuTra> _PhieuTra;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuTraChanging(int value);
    partial void OnMaPhieuTraChanged();
    partial void OnMaBanInChanging(int value);
    partial void OnMaBanInChanged();
    partial void OnDaTraChanging(System.Nullable<bool> value);
    partial void OnDaTraChanged();
    #endregion
		
		public ChiTietPhieuTra()
		{
			this._BanIn = default(EntityRef<BanIn>);
			this._PhieuTra = default(EntityRef<PhieuTra>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuTra", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhieuTra
		{
			get
			{
				return this._MaPhieuTra;
			}
			set
			{
				if ((this._MaPhieuTra != value))
				{
					if (this._PhieuTra.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhieuTraChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuTra = value;
					this.SendPropertyChanged("MaPhieuTra");
					this.OnMaPhieuTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBanIn", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaBanIn
		{
			get
			{
				return this._MaBanIn;
			}
			set
			{
				if ((this._MaBanIn != value))
				{
					if (this._BanIn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBanInChanging(value);
					this.SendPropertyChanging();
					this._MaBanIn = value;
					this.SendPropertyChanged("MaBanIn");
					this.OnMaBanInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaTra", DbType="Bit")]
		public System.Nullable<bool> DaTra
		{
			get
			{
				return this._DaTra;
			}
			set
			{
				if ((this._DaTra != value))
				{
					this.OnDaTraChanging(value);
					this.SendPropertyChanging();
					this._DaTra = value;
					this.SendPropertyChanged("DaTra");
					this.OnDaTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BanIn_ChiTietPhieuTra", Storage="_BanIn", ThisKey="MaBanIn", OtherKey="MaBanIn", IsForeignKey=true)]
		public BanIn BanIn
		{
			get
			{
				return this._BanIn.Entity;
			}
			set
			{
				BanIn previousValue = this._BanIn.Entity;
				if (((previousValue != value) 
							|| (this._BanIn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BanIn.Entity = null;
						previousValue.ChiTietPhieuTras.Remove(this);
					}
					this._BanIn.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuTras.Add(this);
						this._MaBanIn = value.MaBanIn;
					}
					else
					{
						this._MaBanIn = default(int);
					}
					this.SendPropertyChanged("BanIn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuTra_ChiTietPhieuTra", Storage="_PhieuTra", ThisKey="MaPhieuTra", OtherKey="MaPhieuTra", IsForeignKey=true)]
		public PhieuTra PhieuTra
		{
			get
			{
				return this._PhieuTra.Entity;
			}
			set
			{
				PhieuTra previousValue = this._PhieuTra.Entity;
				if (((previousValue != value) 
							|| (this._PhieuTra.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuTra.Entity = null;
						previousValue.ChiTietPhieuTras.Remove(this);
					}
					this._PhieuTra.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuTras.Add(this);
						this._MaPhieuTra = value.MaPhieuTra;
					}
					else
					{
						this._MaPhieuTra = default(int);
					}
					this.SendPropertyChanged("PhieuTra");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DauSach")]
	public partial class DauSach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSach;
		
		private string _TenSach;
		
		private string _BiaSach;
		
		private string _TacGia;
		
		private System.Nullable<int> _MaTheLoai;
		
		private System.Nullable<int> _MaNXB;
		
		private System.Nullable<System.DateTime> _NamXB;
		
		private EntitySet<BanIn> _BanIns;
		
		private EntityRef<TheLoai> _TheLoai;
		
		private EntityRef<NhaXuatBan> _NhaXuatBan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSachChanging(int value);
    partial void OnMaSachChanged();
    partial void OnTenSachChanging(string value);
    partial void OnTenSachChanged();
    partial void OnBiaSachChanging(string value);
    partial void OnBiaSachChanged();
    partial void OnTacGiaChanging(string value);
    partial void OnTacGiaChanged();
    partial void OnMaTheLoaiChanging(System.Nullable<int> value);
    partial void OnMaTheLoaiChanged();
    partial void OnMaNXBChanging(System.Nullable<int> value);
    partial void OnMaNXBChanged();
    partial void OnNamXBChanging(System.Nullable<System.DateTime> value);
    partial void OnNamXBChanged();
    #endregion
		
		public DauSach()
		{
			this._BanIns = new EntitySet<BanIn>(new Action<BanIn>(this.attach_BanIns), new Action<BanIn>(this.detach_BanIns));
			this._TheLoai = default(EntityRef<TheLoai>);
			this._NhaXuatBan = default(EntityRef<NhaXuatBan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSach", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					this.OnMaSachChanging(value);
					this.SendPropertyChanging();
					this._MaSach = value;
					this.SendPropertyChanged("MaSach");
					this.OnMaSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSach", DbType="NVarChar(200)")]
		public string TenSach
		{
			get
			{
				return this._TenSach;
			}
			set
			{
				if ((this._TenSach != value))
				{
					this.OnTenSachChanging(value);
					this.SendPropertyChanging();
					this._TenSach = value;
					this.SendPropertyChanged("TenSach");
					this.OnTenSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BiaSach", DbType="NVarChar(200)")]
		public string BiaSach
		{
			get
			{
				return this._BiaSach;
			}
			set
			{
				if ((this._BiaSach != value))
				{
					this.OnBiaSachChanging(value);
					this.SendPropertyChanging();
					this._BiaSach = value;
					this.SendPropertyChanged("BiaSach");
					this.OnBiaSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TacGia", DbType="NVarChar(100)")]
		public string TacGia
		{
			get
			{
				return this._TacGia;
			}
			set
			{
				if ((this._TacGia != value))
				{
					this.OnTacGiaChanging(value);
					this.SendPropertyChanging();
					this._TacGia = value;
					this.SendPropertyChanged("TacGia");
					this.OnTacGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTheLoai", DbType="Int")]
		public System.Nullable<int> MaTheLoai
		{
			get
			{
				return this._MaTheLoai;
			}
			set
			{
				if ((this._MaTheLoai != value))
				{
					if (this._TheLoai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaTheLoai = value;
					this.SendPropertyChanged("MaTheLoai");
					this.OnMaTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNXB", DbType="Int")]
		public System.Nullable<int> MaNXB
		{
			get
			{
				return this._MaNXB;
			}
			set
			{
				if ((this._MaNXB != value))
				{
					if (this._NhaXuatBan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNXBChanging(value);
					this.SendPropertyChanging();
					this._MaNXB = value;
					this.SendPropertyChanged("MaNXB");
					this.OnMaNXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamXB", DbType="DateTime")]
		public System.Nullable<System.DateTime> NamXB
		{
			get
			{
				return this._NamXB;
			}
			set
			{
				if ((this._NamXB != value))
				{
					this.OnNamXBChanging(value);
					this.SendPropertyChanging();
					this._NamXB = value;
					this.SendPropertyChanged("NamXB");
					this.OnNamXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DauSach_BanIn", Storage="_BanIns", ThisKey="MaSach", OtherKey="MaSach")]
		public EntitySet<BanIn> BanIns
		{
			get
			{
				return this._BanIns;
			}
			set
			{
				this._BanIns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_DauSach", Storage="_TheLoai", ThisKey="MaTheLoai", OtherKey="MaTheLoai", IsForeignKey=true)]
		public TheLoai TheLoai
		{
			get
			{
				return this._TheLoai.Entity;
			}
			set
			{
				TheLoai previousValue = this._TheLoai.Entity;
				if (((previousValue != value) 
							|| (this._TheLoai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheLoai.Entity = null;
						previousValue.DauSaches.Remove(this);
					}
					this._TheLoai.Entity = value;
					if ((value != null))
					{
						value.DauSaches.Add(this);
						this._MaTheLoai = value.MaTheLoai;
					}
					else
					{
						this._MaTheLoai = default(Nullable<int>);
					}
					this.SendPropertyChanged("TheLoai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaXuatBan_DauSach", Storage="_NhaXuatBan", ThisKey="MaNXB", OtherKey="MaNXB", IsForeignKey=true)]
		public NhaXuatBan NhaXuatBan
		{
			get
			{
				return this._NhaXuatBan.Entity;
			}
			set
			{
				NhaXuatBan previousValue = this._NhaXuatBan.Entity;
				if (((previousValue != value) 
							|| (this._NhaXuatBan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaXuatBan.Entity = null;
						previousValue.DauSaches.Remove(this);
					}
					this._NhaXuatBan.Entity = value;
					if ((value != null))
					{
						value.DauSaches.Add(this);
						this._MaNXB = value.MaNXB;
					}
					else
					{
						this._MaNXB = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhaXuatBan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BanIns(BanIn entity)
		{
			this.SendPropertyChanging();
			entity.DauSach = this;
		}
		
		private void detach_BanIns(BanIn entity)
		{
			this.SendPropertyChanging();
			entity.DauSach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocGia")]
	public partial class DocGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDocGia;
		
		private string _TenDocGia;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _CMND;
		
		private EntitySet<TheThuVien> _TheThuViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDocGiaChanging(int value);
    partial void OnMaDocGiaChanged();
    partial void OnTenDocGiaChanging(string value);
    partial void OnTenDocGiaChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    #endregion
		
		public DocGia()
		{
			this._TheThuViens = new EntitySet<TheThuVien>(new Action<TheThuVien>(this.attach_TheThuViens), new Action<TheThuVien>(this.detach_TheThuViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDocGia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDocGia
		{
			get
			{
				return this._MaDocGia;
			}
			set
			{
				if ((this._MaDocGia != value))
				{
					this.OnMaDocGiaChanging(value);
					this.SendPropertyChanging();
					this._MaDocGia = value;
					this.SendPropertyChanged("MaDocGia");
					this.OnMaDocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDocGia", DbType="NVarChar(100)")]
		public string TenDocGia
		{
			get
			{
				return this._TenDocGia;
			}
			set
			{
				if ((this._TenDocGia != value))
				{
					this.OnTenDocGiaChanging(value);
					this.SendPropertyChanging();
					this._TenDocGia = value;
					this.SendPropertyChanged("TenDocGia");
					this.OnTenDocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="VarChar(12)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocGia_TheThuVien", Storage="_TheThuViens", ThisKey="MaDocGia", OtherKey="MaDocGia")]
		public EntitySet<TheThuVien> TheThuViens
		{
			get
			{
				return this._TheThuViens;
			}
			set
			{
				this._TheThuViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TheThuViens(TheThuVien entity)
		{
			this.SendPropertyChanging();
			entity.DocGia = this;
		}
		
		private void detach_TheThuViens(TheThuVien entity)
		{
			this.SendPropertyChanging();
			entity.DocGia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNhanVien;
		
		private string _TenNhanVien;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private EntitySet<PhieuMuon> _PhieuMuons;
		
		private EntitySet<PhieuTra> _PhieuTras;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhanVienChanging(int value);
    partial void OnMaNhanVienChanged();
    partial void OnTenNhanVienChanging(string value);
    partial void OnTenNhanVienChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    #endregion
		
		public NhanVien()
		{
			this._PhieuMuons = new EntitySet<PhieuMuon>(new Action<PhieuMuon>(this.attach_PhieuMuons), new Action<PhieuMuon>(this.detach_PhieuMuons));
			this._PhieuTras = new EntitySet<PhieuTra>(new Action<PhieuTra>(this.attach_PhieuTras), new Action<PhieuTra>(this.detach_PhieuTras));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhanVien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNhanVien
		{
			get
			{
				return this._MaNhanVien;
			}
			set
			{
				if ((this._MaNhanVien != value))
				{
					this.OnMaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaNhanVien = value;
					this.SendPropertyChanged("MaNhanVien");
					this.OnMaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhanVien", DbType="NVarChar(100)")]
		public string TenNhanVien
		{
			get
			{
				return this._TenNhanVien;
			}
			set
			{
				if ((this._TenNhanVien != value))
				{
					this.OnTenNhanVienChanging(value);
					this.SendPropertyChanging();
					this._TenNhanVien = value;
					this.SendPropertyChanged("TenNhanVien");
					this.OnTenNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuMuon", Storage="_PhieuMuons", ThisKey="MaNhanVien", OtherKey="MaNhanVien")]
		public EntitySet<PhieuMuon> PhieuMuons
		{
			get
			{
				return this._PhieuMuons;
			}
			set
			{
				this._PhieuMuons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuTra", Storage="_PhieuTras", ThisKey="MaNhanVien", OtherKey="MaNhanVien")]
		public EntitySet<PhieuTra> PhieuTras
		{
			get
			{
				return this._PhieuTras;
			}
			set
			{
				this._PhieuTras.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaXuatBan")]
	public partial class NhaXuatBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNXB;
		
		private string _TenNXB;
		
		private string _DiaChiNXB;
		
		private string _DienThoaiNXB;
		
		private EntitySet<DauSach> _DauSaches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNXBChanging(int value);
    partial void OnMaNXBChanged();
    partial void OnTenNXBChanging(string value);
    partial void OnTenNXBChanged();
    partial void OnDiaChiNXBChanging(string value);
    partial void OnDiaChiNXBChanged();
    partial void OnDienThoaiNXBChanging(string value);
    partial void OnDienThoaiNXBChanged();
    #endregion
		
		public NhaXuatBan()
		{
			this._DauSaches = new EntitySet<DauSach>(new Action<DauSach>(this.attach_DauSaches), new Action<DauSach>(this.detach_DauSaches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNXB", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNXB
		{
			get
			{
				return this._MaNXB;
			}
			set
			{
				if ((this._MaNXB != value))
				{
					this.OnMaNXBChanging(value);
					this.SendPropertyChanging();
					this._MaNXB = value;
					this.SendPropertyChanged("MaNXB");
					this.OnMaNXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNXB", DbType="NVarChar(100)")]
		public string TenNXB
		{
			get
			{
				return this._TenNXB;
			}
			set
			{
				if ((this._TenNXB != value))
				{
					this.OnTenNXBChanging(value);
					this.SendPropertyChanging();
					this._TenNXB = value;
					this.SendPropertyChanged("TenNXB");
					this.OnTenNXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiNXB", DbType="NVarChar(100)")]
		public string DiaChiNXB
		{
			get
			{
				return this._DiaChiNXB;
			}
			set
			{
				if ((this._DiaChiNXB != value))
				{
					this.OnDiaChiNXBChanging(value);
					this.SendPropertyChanging();
					this._DiaChiNXB = value;
					this.SendPropertyChanged("DiaChiNXB");
					this.OnDiaChiNXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoaiNXB", DbType="VarChar(15)")]
		public string DienThoaiNXB
		{
			get
			{
				return this._DienThoaiNXB;
			}
			set
			{
				if ((this._DienThoaiNXB != value))
				{
					this.OnDienThoaiNXBChanging(value);
					this.SendPropertyChanging();
					this._DienThoaiNXB = value;
					this.SendPropertyChanged("DienThoaiNXB");
					this.OnDienThoaiNXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaXuatBan_DauSach", Storage="_DauSaches", ThisKey="MaNXB", OtherKey="MaNXB")]
		public EntitySet<DauSach> DauSaches
		{
			get
			{
				return this._DauSaches;
			}
			set
			{
				this._DauSaches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DauSaches(DauSach entity)
		{
			this.SendPropertyChanging();
			entity.NhaXuatBan = this;
		}
		
		private void detach_DauSaches(DauSach entity)
		{
			this.SendPropertyChanging();
			entity.NhaXuatBan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuMuon")]
	public partial class PhieuMuon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhieuMuon;
		
		private System.Nullable<int> _MaNhanVien;
		
		private System.Nullable<int> _MaThe;
		
		private System.Nullable<System.DateTime> _NgayMuon;
		
		private System.Nullable<bool> _TinhTrang;
		
		private EntitySet<ChiTietPhieuMuon> _ChiTietPhieuMuons;
		
		private EntitySet<PhieuTra> _PhieuTras;
		
		private EntityRef<NhanVien> _NhanVien;
		
		private EntityRef<TheThuVien> _TheThuVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuMuonChanging(int value);
    partial void OnMaPhieuMuonChanged();
    partial void OnMaNhanVienChanging(System.Nullable<int> value);
    partial void OnMaNhanVienChanged();
    partial void OnMaTheChanging(System.Nullable<int> value);
    partial void OnMaTheChanged();
    partial void OnNgayMuonChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayMuonChanged();
    partial void OnTinhTrangChanging(System.Nullable<bool> value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public PhieuMuon()
		{
			this._ChiTietPhieuMuons = new EntitySet<ChiTietPhieuMuon>(new Action<ChiTietPhieuMuon>(this.attach_ChiTietPhieuMuons), new Action<ChiTietPhieuMuon>(this.detach_ChiTietPhieuMuons));
			this._PhieuTras = new EntitySet<PhieuTra>(new Action<PhieuTra>(this.attach_PhieuTras), new Action<PhieuTra>(this.detach_PhieuTras));
			this._NhanVien = default(EntityRef<NhanVien>);
			this._TheThuVien = default(EntityRef<TheThuVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuMuon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPhieuMuon
		{
			get
			{
				return this._MaPhieuMuon;
			}
			set
			{
				if ((this._MaPhieuMuon != value))
				{
					this.OnMaPhieuMuonChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuMuon = value;
					this.SendPropertyChanged("MaPhieuMuon");
					this.OnMaPhieuMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhanVien", DbType="Int")]
		public System.Nullable<int> MaNhanVien
		{
			get
			{
				return this._MaNhanVien;
			}
			set
			{
				if ((this._MaNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaNhanVien = value;
					this.SendPropertyChanged("MaNhanVien");
					this.OnMaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="Int")]
		public System.Nullable<int> MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					if (this._TheThuVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayMuon", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayMuon
		{
			get
			{
				return this._NgayMuon;
			}
			set
			{
				if ((this._NgayMuon != value))
				{
					this.OnNgayMuonChanging(value);
					this.SendPropertyChanging();
					this._NgayMuon = value;
					this.SendPropertyChanged("NgayMuon");
					this.OnNgayMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit")]
		public System.Nullable<bool> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuMuon_ChiTietPhieuMuon", Storage="_ChiTietPhieuMuons", ThisKey="MaPhieuMuon", OtherKey="MaPhieuMuon")]
		public EntitySet<ChiTietPhieuMuon> ChiTietPhieuMuons
		{
			get
			{
				return this._ChiTietPhieuMuons;
			}
			set
			{
				this._ChiTietPhieuMuons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuMuon_PhieuTra", Storage="_PhieuTras", ThisKey="MaPhieuMuon", OtherKey="MaPhieuMuon")]
		public EntitySet<PhieuTra> PhieuTras
		{
			get
			{
				return this._PhieuTras;
			}
			set
			{
				this._PhieuTras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuMuon", Storage="_NhanVien", ThisKey="MaNhanVien", OtherKey="MaNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhieuMuons.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhieuMuons.Add(this);
						this._MaNhanVien = value.MaNhanVien;
					}
					else
					{
						this._MaNhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheThuVien_PhieuMuon", Storage="_TheThuVien", ThisKey="MaThe", OtherKey="MaThe", IsForeignKey=true)]
		public TheThuVien TheThuVien
		{
			get
			{
				return this._TheThuVien.Entity;
			}
			set
			{
				TheThuVien previousValue = this._TheThuVien.Entity;
				if (((previousValue != value) 
							|| (this._TheThuVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheThuVien.Entity = null;
						previousValue.PhieuMuons.Remove(this);
					}
					this._TheThuVien.Entity = value;
					if ((value != null))
					{
						value.PhieuMuons.Add(this);
						this._MaThe = value.MaThe;
					}
					else
					{
						this._MaThe = default(Nullable<int>);
					}
					this.SendPropertyChanged("TheThuVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhieuMuons(ChiTietPhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.PhieuMuon = this;
		}
		
		private void detach_ChiTietPhieuMuons(ChiTietPhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.PhieuMuon = null;
		}
		
		private void attach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.PhieuMuon = this;
		}
		
		private void detach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.PhieuMuon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuTra")]
	public partial class PhieuTra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhieuTra;
		
		private System.Nullable<int> _MaPhieuMuon;
		
		private System.Nullable<int> _MaNhanVien;
		
		private System.Nullable<int> _MaThe;
		
		private System.Nullable<System.DateTime> _NgayTra;
		
		private EntitySet<ChiTietPhieuTra> _ChiTietPhieuTras;
		
		private EntityRef<NhanVien> _NhanVien;
		
		private EntityRef<PhieuMuon> _PhieuMuon;
		
		private EntityRef<TheThuVien> _TheThuVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuTraChanging(int value);
    partial void OnMaPhieuTraChanged();
    partial void OnMaPhieuMuonChanging(System.Nullable<int> value);
    partial void OnMaPhieuMuonChanged();
    partial void OnMaNhanVienChanging(System.Nullable<int> value);
    partial void OnMaNhanVienChanged();
    partial void OnMaTheChanging(System.Nullable<int> value);
    partial void OnMaTheChanged();
    partial void OnNgayTraChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTraChanged();
    #endregion
		
		public PhieuTra()
		{
			this._ChiTietPhieuTras = new EntitySet<ChiTietPhieuTra>(new Action<ChiTietPhieuTra>(this.attach_ChiTietPhieuTras), new Action<ChiTietPhieuTra>(this.detach_ChiTietPhieuTras));
			this._NhanVien = default(EntityRef<NhanVien>);
			this._PhieuMuon = default(EntityRef<PhieuMuon>);
			this._TheThuVien = default(EntityRef<TheThuVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuTra", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPhieuTra
		{
			get
			{
				return this._MaPhieuTra;
			}
			set
			{
				if ((this._MaPhieuTra != value))
				{
					this.OnMaPhieuTraChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuTra = value;
					this.SendPropertyChanged("MaPhieuTra");
					this.OnMaPhieuTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuMuon", DbType="Int")]
		public System.Nullable<int> MaPhieuMuon
		{
			get
			{
				return this._MaPhieuMuon;
			}
			set
			{
				if ((this._MaPhieuMuon != value))
				{
					if (this._PhieuMuon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhieuMuonChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuMuon = value;
					this.SendPropertyChanged("MaPhieuMuon");
					this.OnMaPhieuMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhanVien", DbType="Int")]
		public System.Nullable<int> MaNhanVien
		{
			get
			{
				return this._MaNhanVien;
			}
			set
			{
				if ((this._MaNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaNhanVien = value;
					this.SendPropertyChanged("MaNhanVien");
					this.OnMaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="Int")]
		public System.Nullable<int> MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					if (this._TheThuVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTra", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTra
		{
			get
			{
				return this._NgayTra;
			}
			set
			{
				if ((this._NgayTra != value))
				{
					this.OnNgayTraChanging(value);
					this.SendPropertyChanging();
					this._NgayTra = value;
					this.SendPropertyChanged("NgayTra");
					this.OnNgayTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuTra_ChiTietPhieuTra", Storage="_ChiTietPhieuTras", ThisKey="MaPhieuTra", OtherKey="MaPhieuTra")]
		public EntitySet<ChiTietPhieuTra> ChiTietPhieuTras
		{
			get
			{
				return this._ChiTietPhieuTras;
			}
			set
			{
				this._ChiTietPhieuTras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuTra", Storage="_NhanVien", ThisKey="MaNhanVien", OtherKey="MaNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhieuTras.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhieuTras.Add(this);
						this._MaNhanVien = value.MaNhanVien;
					}
					else
					{
						this._MaNhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuMuon_PhieuTra", Storage="_PhieuMuon", ThisKey="MaPhieuMuon", OtherKey="MaPhieuMuon", IsForeignKey=true)]
		public PhieuMuon PhieuMuon
		{
			get
			{
				return this._PhieuMuon.Entity;
			}
			set
			{
				PhieuMuon previousValue = this._PhieuMuon.Entity;
				if (((previousValue != value) 
							|| (this._PhieuMuon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuMuon.Entity = null;
						previousValue.PhieuTras.Remove(this);
					}
					this._PhieuMuon.Entity = value;
					if ((value != null))
					{
						value.PhieuTras.Add(this);
						this._MaPhieuMuon = value.MaPhieuMuon;
					}
					else
					{
						this._MaPhieuMuon = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhieuMuon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheThuVien_PhieuTra", Storage="_TheThuVien", ThisKey="MaThe", OtherKey="MaThe", IsForeignKey=true)]
		public TheThuVien TheThuVien
		{
			get
			{
				return this._TheThuVien.Entity;
			}
			set
			{
				TheThuVien previousValue = this._TheThuVien.Entity;
				if (((previousValue != value) 
							|| (this._TheThuVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheThuVien.Entity = null;
						previousValue.PhieuTras.Remove(this);
					}
					this._TheThuVien.Entity = value;
					if ((value != null))
					{
						value.PhieuTras.Add(this);
						this._MaThe = value.MaThe;
					}
					else
					{
						this._MaThe = default(Nullable<int>);
					}
					this.SendPropertyChanged("TheThuVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhieuTras(ChiTietPhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.PhieuTra = this;
		}
		
		private void detach_ChiTietPhieuTras(ChiTietPhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.PhieuTra = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheThuVien")]
	public partial class TheThuVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaThe;
		
		private System.Nullable<int> _MaDocGia;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<System.DateTime> _NgayHetHan;
		
		private string _GhiChu;
		
		private System.Nullable<bool> _TinhTrang;
		
		private EntitySet<PhieuMuon> _PhieuMuons;
		
		private EntitySet<PhieuTra> _PhieuTras;
		
		private EntityRef<DocGia> _DocGia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTheChanging(int value);
    partial void OnMaTheChanged();
    partial void OnMaDocGiaChanging(System.Nullable<int> value);
    partial void OnMaDocGiaChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnNgayHetHanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHetHanChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnTinhTrangChanging(System.Nullable<bool> value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public TheThuVien()
		{
			this._PhieuMuons = new EntitySet<PhieuMuon>(new Action<PhieuMuon>(this.attach_PhieuMuons), new Action<PhieuMuon>(this.detach_PhieuMuons));
			this._PhieuTras = new EntitySet<PhieuTra>(new Action<PhieuTra>(this.attach_PhieuTras), new Action<PhieuTra>(this.detach_PhieuTras));
			this._DocGia = default(EntityRef<DocGia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDocGia", DbType="Int")]
		public System.Nullable<int> MaDocGia
		{
			get
			{
				return this._MaDocGia;
			}
			set
			{
				if ((this._MaDocGia != value))
				{
					if (this._DocGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDocGiaChanging(value);
					this.SendPropertyChanging();
					this._MaDocGia = value;
					this.SendPropertyChanged("MaDocGia");
					this.OnMaDocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHetHan", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayHetHan
		{
			get
			{
				return this._NgayHetHan;
			}
			set
			{
				if ((this._NgayHetHan != value))
				{
					this.OnNgayHetHanChanging(value);
					this.SendPropertyChanging();
					this._NgayHetHan = value;
					this.SendPropertyChanged("NgayHetHan");
					this.OnNgayHetHanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(100)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit")]
		public System.Nullable<bool> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheThuVien_PhieuMuon", Storage="_PhieuMuons", ThisKey="MaThe", OtherKey="MaThe")]
		public EntitySet<PhieuMuon> PhieuMuons
		{
			get
			{
				return this._PhieuMuons;
			}
			set
			{
				this._PhieuMuons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheThuVien_PhieuTra", Storage="_PhieuTras", ThisKey="MaThe", OtherKey="MaThe")]
		public EntitySet<PhieuTra> PhieuTras
		{
			get
			{
				return this._PhieuTras;
			}
			set
			{
				this._PhieuTras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocGia_TheThuVien", Storage="_DocGia", ThisKey="MaDocGia", OtherKey="MaDocGia", IsForeignKey=true)]
		public DocGia DocGia
		{
			get
			{
				return this._DocGia.Entity;
			}
			set
			{
				DocGia previousValue = this._DocGia.Entity;
				if (((previousValue != value) 
							|| (this._DocGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocGia.Entity = null;
						previousValue.TheThuViens.Remove(this);
					}
					this._DocGia.Entity = value;
					if ((value != null))
					{
						value.TheThuViens.Add(this);
						this._MaDocGia = value.MaDocGia;
					}
					else
					{
						this._MaDocGia = default(Nullable<int>);
					}
					this.SendPropertyChanged("DocGia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.TheThuVien = this;
		}
		
		private void detach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.TheThuVien = null;
		}
		
		private void attach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.TheThuVien = this;
		}
		
		private void detach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.TheThuVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.view_DSDauSach")]
	public partial class view_DSDauSach
	{
		
		private int _MaSach;
		
		private string _TenSach;
		
		private string _BiaSach;
		
		private string _TacGia;
		
		private string _TenTheLoai;
		
		private string _TenNXB;
		
		private System.Nullable<System.DateTime> _NamXB;
		
		public view_DSDauSach()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSach", DbType="Int NOT NULL")]
		public int MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					this._MaSach = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSach", DbType="NVarChar(200)")]
		public string TenSach
		{
			get
			{
				return this._TenSach;
			}
			set
			{
				if ((this._TenSach != value))
				{
					this._TenSach = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BiaSach", DbType="NVarChar(200)")]
		public string BiaSach
		{
			get
			{
				return this._BiaSach;
			}
			set
			{
				if ((this._BiaSach != value))
				{
					this._BiaSach = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TacGia", DbType="NVarChar(100)")]
		public string TacGia
		{
			get
			{
				return this._TacGia;
			}
			set
			{
				if ((this._TacGia != value))
				{
					this._TacGia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTheLoai", DbType="NVarChar(100)")]
		public string TenTheLoai
		{
			get
			{
				return this._TenTheLoai;
			}
			set
			{
				if ((this._TenTheLoai != value))
				{
					this._TenTheLoai = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNXB", DbType="NVarChar(100)")]
		public string TenNXB
		{
			get
			{
				return this._TenNXB;
			}
			set
			{
				if ((this._TenNXB != value))
				{
					this._TenNXB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamXB", DbType="DateTime")]
		public System.Nullable<System.DateTime> NamXB
		{
			get
			{
				return this._NamXB;
			}
			set
			{
				if ((this._NamXB != value))
				{
					this._NamXB = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.view_DSPhieuMuon")]
	public partial class view_DSPhieuMuon
	{
		
		private int _MaPhieuMuon;
		
		private string _TenNhanVien;
		
		private int _MaThe;
		
		private string _TenDocGia;
		
		private System.Nullable<System.DateTime> _NgayMuon;
		
		private System.Nullable<bool> _TinhTrang;
		
		public view_DSPhieuMuon()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuMuon", DbType="Int NOT NULL")]
		public int MaPhieuMuon
		{
			get
			{
				return this._MaPhieuMuon;
			}
			set
			{
				if ((this._MaPhieuMuon != value))
				{
					this._MaPhieuMuon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhanVien", DbType="NVarChar(100)")]
		public string TenNhanVien
		{
			get
			{
				return this._TenNhanVien;
			}
			set
			{
				if ((this._TenNhanVien != value))
				{
					this._TenNhanVien = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="Int NOT NULL")]
		public int MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					this._MaThe = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDocGia", DbType="NVarChar(100)")]
		public string TenDocGia
		{
			get
			{
				return this._TenDocGia;
			}
			set
			{
				if ((this._TenDocGia != value))
				{
					this._TenDocGia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayMuon", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayMuon
		{
			get
			{
				return this._NgayMuon;
			}
			set
			{
				if ((this._NgayMuon != value))
				{
					this._NgayMuon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit")]
		public System.Nullable<bool> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this._TinhTrang = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
